<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
           http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
 		   http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd"
	default-autowire="byName" default-lazy-init="true">
	<!-- 设置AOP -->
	<aop:aspectj-autoproxy />
	<!-- cache AOP -->
	<bean class="com.ewing.core.aop.RedisCacheAdvice"></bean>
	<ehcache:annotation-driven />
	<ehcache:config cache-manager="cacheManager">
		<ehcache:evict-expired-elements
			interval="60" />
	</ehcache:config>

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>

	<!-- 开启注解配置 -->
	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 对指定的包进行组件扫描 -->
	<context:component-scan base-package="*" />
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/ewing" />
		<!-- <property name="url" value="jdbc:mysql://100.84.89.236:3306/ewing" /> -->
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!-- 集成hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--  <property name="configLocation" value="classpath:jbpm.hibernate.cfg.xml"></property> -->
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/ewing/busi/resource/model/*.hbm.xml</value> 
				<value>classpath:com/ewing/busi/customer/model/*.hbm.xml</value> 
			</list>

		</property>
	</bean>

	<bean name="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<!-- 当你使用mysql的时候，jbpm使用的是org.hibernate.dialect.MySQLInnoDBDialect -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="net.sf.ehcache.configurationResourceName">conf/ehcache.xml</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
			</props>
		</property>
	</bean>
 
	<!-- 数据层用的模板工具，不是必须的 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 事务配置，必须 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 通知配置 -->
	<tx:advice id="txManager" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!--
		事务需要配置AOP <aop:config> <aop:pointcut id="allManagerMethod"
		expression="execution(* com.web.service.*.*(..))" /> <aop:advisor
		advice-ref="txManager" pointcut-ref="allManagerMethod" />
		</aop:config>
	-->
	
	
	
	<!-- 计划任务
	<bean id="orderJob" class="com.web.schedule.OrderJob" />
	  
	<bean id="orderJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="orderJob" />
		<property name="targetMethod" value="checkOutTimeOrder" />
	</bean>
	<bean id="orderJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref bean="orderJobDetail" />
		</property>
		<property name="startDelay">
			<value>0</value>
			 
		</property>
		<property name="repeatInterval">
			<value>1000</value>
		 
		</property>
	</bean>

	<bean id="cronTrigger_2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="orderJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0/5 * * * ?</value>
		</property>
	</bean>
	<bean lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger_2" />
			</list>
		</property>
	</bean>
 -->
 <bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath"
			value="template" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>
</beans>

